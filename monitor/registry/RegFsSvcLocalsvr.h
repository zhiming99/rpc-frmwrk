// GENERATED BY RIDLC, MAKE SURE TO BACKUP BEFORE RUNNING RIDLC AGAIN
// Copyright (C) 2024  zhiming <woodhead99@gmail.com>
// This program can be distributed under the terms of the GNU GPLv3.
// ridlc -O . -I ../registry -l regfs.ridl 
// Your task is to implement the following classes
// to get your rpc server work
#pragma once
#include "RegistryFs.h"
#include "blkalloc.h"

namespace rpcf
{

class CRegFsSvcLocal_SvrImpl 
    : public CRegFsSvcLocal_SvrSkel
{
    protected:
    RegFsPtr m_pRegFs;

    public:
    typedef CRegFsSvcLocal_SvrSkel super;
    CRegFsSvcLocal_SvrImpl( const IConfigDb* pCfg );

    gint32 InvokeUserMethod(
        IConfigDb* pParams,
        IEventSink* pCallback ) override;

    gint32 OnPostStart(
        IEventSink* pCallback ) override;

    gint32 OnPreStop(
        IEventSink* pCallback ) override;

    // IRegFsLocal
    virtual gint32 CreateFile(
        const std::string& strPath /*[ In ]*/,
        guint32 dwMode /*[ In ]*/,
        guint32 dwFlags /*[ In ]*/,
        guint64& hFile /*[ Out ]*/ );
    
    virtual gint32 MakeDir(
        const std::string& strPath /*[ In ]*/,
        guint32 dwMode /*[ In ]*/ );
    
    virtual gint32 OpenFile(
        const std::string& strPath /*[ In ]*/,
        guint32 dwFlags /*[ In ]*/,
        guint64& hFile /*[ Out ]*/ );
    
    virtual gint32 CloseFile(
        guint64 hFile /*[ In ]*/ );
    
    virtual gint32 RemoveFile(
        const std::string& strPath /*[ In ]*/ );
    
    virtual gint32 ReadFile(
        guint64 hFile /*[ In ]*/,
        guint32 dwSize /*[ In ]*/,
        guint32 dwOff /*[ In ]*/,
        BufPtr& buffer /*[ Out ]*/ );
    
    virtual gint32 WriteFile(
        guint64 hFile /*[ In ]*/,
        BufPtr& buffer /*[ In ]*/,
        guint32 dwOff /*[ In ]*/,
        guint32& dwSizeWrite /*[ Out ]*/ );
    
    virtual gint32 Truncate(
        guint64 hFile /*[ In ]*/,
        guint32 dwOff /*[ In ]*/ );
    
    virtual gint32 CloseDir(
        guint64 hFile /*[ In ]*/ );
    
    virtual gint32 RemoveDir(
        const std::string& strPath /*[ In ]*/ );
    
    virtual gint32 SetGid(
        const std::string& strPath /*[ In ]*/,
        guint32 wGid /*[ In ]*/ );
    
    virtual gint32 SetUid(
        const std::string& strPath /*[ In ]*/,
        guint32 wUid /*[ In ]*/ );
    
    virtual gint32 GetGid(
        const std::string& strPath /*[ In ]*/,
        guint32& gid /*[ Out ]*/ );
    
    virtual gint32 GetUid(
        const std::string& strPath /*[ In ]*/,
        guint32& uid /*[ Out ]*/ );
    
    virtual gint32 SymLink(
        const std::string& strSrcPath /*[ In ]*/,
        const std::string& strDestPath /*[ In ]*/ );
    
    virtual gint32 GetValue(
        const std::string& strPath /*[ In ]*/,
        std::string& strJson /*[ Out ]*/ );
    
    virtual gint32 SetValue(
        const std::string& strPath /*[ In ]*/,
        const std::string& strJson /*[ In ]*/ );
    
    virtual gint32 Chmod(
        const std::string& strPath /*[ In ]*/,
        guint32 dwMode /*[ In ]*/ );
    
    virtual gint32 Chown(
        const std::string& strPath /*[ In ]*/,
        guint32 dwUid /*[ In ]*/,
        guint32 dwGid /*[ In ]*/ );
    
    virtual gint32 ReadLink(
        const std::string& strPath /*[ In ]*/,
        BufPtr& buf /*[ Out ]*/ );
    
    virtual gint32 Rename(
        const std::string& szFrom /*[ In ]*/,
        const std::string& szTo /*[ In ]*/ );
    
    virtual gint32 Flush(
        guint32 dwFlags /*[ In ]*/ );
    
    virtual gint32 Access(
        const std::string& strPath /*[ In ]*/,
        guint32 dwFlags /*[ In ]*/ );
    
    virtual gint32 GetAttr(
        const std::string& strPath /*[ In ]*/,
        FileStat& oStat /*[ Out ]*/ );
    
    virtual gint32 ReadDir(
        guint64 hDir /*[ In ]*/,
        std::vector<FileStat>& vecDirEnt /*[ Out ]*/ );
    
    virtual gint32 OpenDir(
        const std::string& strPath /*[ In ]*/,
        guint32 dwFlags /*[ In ]*/,
        guint64& hDir /*[ Out ]*/ );
    
    virtual gint32 ExecBat(
        const std::string& strJson /*[ In ]*/ );
    
};

}

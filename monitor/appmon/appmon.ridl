appname "appmon";
// include "../registry/regfsif.ridl";

struct KeyValue
{
    string strKey;
    variant oValue;
};

interface IAppStore
{
    [async_s]ListApps()
    returns( array<string> arrApps );

    [async_s]ListPoints( string strAppName)
    returns( array<string> arrPoints );
    
    [async_s]ListAttributes( string strPtPath)
    returns( array<string> arrAttributes );

    [async_s]SetPointValue(
        string strPtPath, variant value )
    returns();

    [async_s]GetPointValue( string strPtPath )
    returns( variant rvalue );

    [async_s]SetLargePointValue(
        string strPtPath, bytearray value )
    returns();

    [async_s]GetLargePointValue(
        string strPtPath )
    returns( bytearray value );

    [async_s]SubscribeStreamPoint(
        string strPtPath, HSTREAM hstm )
    returns();

    [async_s]SetAttrValue(
        string strAttrPath, variant value )
    returns();

    [async_s]GetAttrValue( string strAttrPath )
    returns( variant rvalue );

    [async_s]SetPointValues(
        string strAppName,
        array<KeyValue> arrValues ) 
    returns();

    [async_s]GetPointValues(
        string strAppName,
        array< string > arrPtPaths )
    returns( array< KeyValue > arrKeyVals );

    [ event ]OnPointChanged(
        string strPtPath, variant value ) 
    returns();

    [ event ]OnPointsChanged(
        array< KeyValue > arrKVs ) 
    returns();
};

interface IAppMonitor
{
    [async_s]RegisterListener(
        array<string> arrApps )
    returns();

    [async_s]RemoveListener()
    returns();
};

interface IDataProducer
{
    [async]ClaimAppInst( string strAppName,
        array< KeyValue > arrPtToSet )
    returns( array< KeyValue > arrPtToGet );

    [async]FreeAppInsts(
        array< string > arrApps )
    returns();
};

interface IUserManager
{
    [async_s]GetUidByOAuth2Name( string strOA2Name )
    returns( int32 dwUid );
    [async_s]GetUidByKrb5Name( string strKrb5Name )
    returns( int32 dwUid );
    [async_s]GetUidByUserName( string strUserName )
    returns( int32 dwUid );
    [async_s]GetPasswordSalt( int32 dwUid )
    returns( string strSalt );
    [async_s]CheckClientToken(
        ObjPtr oClientInfo, ObjPtr oSvrInfo )
    returns( ObjPtr oInfo );
};

service AppManager [stream] 
{
    interface IAppStore;
    interface IDataProducer;
};

service AppMonitor [stream]
{
    interface IAppStore;
    interface IAppMonitor;
};

service SimpleAuth
{
    interface IUserManager;
};

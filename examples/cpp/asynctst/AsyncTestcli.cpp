// GENERATED BY RIDLC, MAKE SURE TO BACKUP BEFORE RUNNING RIDLC AGAIN
// Copyright (C) 2024  zhiming <woodhead99@gmail.com>
// This program can be distributed under the terms of the GNU GPLv3.
// ridlc -O ./asynctst ../asynctst.ridl 
// Implement the following methods
// to get the RPC proxy/server work
#include "rpc.h"
using namespace rpcf;
#include "asynctst.h"
#include "AsyncTestcli.h"

// IAsyncTest Proxy
/* Async Req Complete Handler*/
gint32 CAsyncTest_CliImpl::LongWaitCallback(
    IConfigDb* context, gint32 iRet,
    const std::string& i0r /*[ In ]*/ )
{
    if( ERROR( iRet ) )
        OutputMsg( iRet,
            "LongWait returned with error" );
    else
        OutputMsg( iRet,
	    "LongWait returned with response %s", i0r.c_str() );
    SetError( iRet );
    NotifyComplete();
    return 0;
}

/* Async Req Complete Handler*/
gint32 CAsyncTest_CliImpl::LongWaitNoParamCallback(
    IConfigDb* context, gint32 iRet )
{
    OutputMsg( iRet,
        "LongWaitNoParam returned with status" );
    SetError( iRet );
    NotifyComplete();
    return 0;
}



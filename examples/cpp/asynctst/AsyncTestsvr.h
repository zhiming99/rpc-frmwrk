// GENERATED BY RIDLC, MAKE SURE TO BACKUP BEFORE RUNNING RIDLC AGAIN
// Copyright (C) 2024  zhiming <woodhead99@gmail.com>
// This program can be distributed under the terms of the GNU GPLv3.
// ridlc -O ./asynctst ../asynctst.ridl 
// Your task is to implement the following classes
// to get your rpc server work
#pragma once
#include "asynctst.h"

class CAsyncTest_SvrImpl
    : public CAsyncTest_SvrSkel
{
    public:
    typedef CAsyncTest_SvrSkel super;
    CAsyncTest_SvrImpl( const IConfigDb* pCfg ) :
        super::virtbase( pCfg ), super( pCfg )
    { SetClassId( clsid(CAsyncTest_SvrImpl ) ); }

    gint32 InvokeUserMethod(
        IConfigDb* pParams,
        IEventSink* pCallback ) override
    {
        gint32 ret = AllocReqToken();
        if( ERROR( ret ) )
            return ret;
        return super::InvokeUserMethod(
            pParams, pCallback );
    }

    gint32 OnPostStart(
        IEventSink* pCallback ) override
    {
        StartQpsTask();
        return super::OnPostStart( pCallback );
    }

    gint32 OnPreStop(
        IEventSink* pCallback ) override
    {
        StopQpsTask();
        return super::OnPreStop( pCallback );
    }

    gint32 LongWaitCb(
        IEventSink* pCallback,
        IConfigDb* pReqCtx_,
        const std::string& i0 );

    // IAsyncTest
    virtual gint32 LongWait(
        IConfigDb* pReqCtx_,
        const std::string& i0 /*[ In ]*/,
        std::string& i0r /*[ Out ]*/ );
    
    // RPC Async Req Cancel Handler
    // Rewrite this method to release the resources
    gint32 OnLongWaitCanceled(
        IConfigDb* pReqCtx,
        gint32 iRet,
        const std::string& i0 /*[ In ]*/ );

    virtual gint32 LongWaitNoParam();
    
    gint32 LongWait2Cb(
        IConfigDb* pReqCtx,
        const std::string& i1 );

    virtual gint32 LongWait2(
        IConfigDb* pReqCtx_,
        const std::string& i1 /*[ In ]*/,
        std::string& i1r /*[ Out ]*/ );
    
    // RPC Async Req Cancel Handler
    // Rewrite this method to release the resources
    gint32 OnLongWait2Canceled(
        IConfigDb* pReqCtx,
        gint32 iRet,
        const std::string& i1 /*[ In ]*/ )
    {
        DebugPrintEx( logErr, iRet,
            "request 'LongWait2' is canceled." );
        return 0;
    }
};


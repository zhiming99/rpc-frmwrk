// GENERATED BY RIDLC, MAKE SURE TO BACKUP BEFORE RUNNING RIDLC AGAIN
// Copyright (C) 2024  zhiming <woodhead99@gmail.com>
// This program can be distributed under the terms of the GNU GPLv3.
// ridlc -O ./asynctst ../asynctst.ridl 
// Your task is to implement the following classes
// to get your rpc server work
#pragma once
#include "asynctst.h"

class CAsyncTest_CliImpl
    : public CAsyncTest_CliSkel
{
    sem_t m_semWait;
    gint32 m_iError = STATUS_SUCCESS;

    public:
    typedef CAsyncTest_CliSkel super;
    CAsyncTest_CliImpl( const IConfigDb* pCfg ) :
        super::virtbase( pCfg ), super( pCfg )
    {
        SetClassId( clsid(CAsyncTest_CliImpl ) );
        Sem_Init( &m_semWait, 0, 0 );
    }

    inline void NotifyComplete()
    { Sem_Post( &m_semWait ); }

    inline void WaitForComplete()
    { Sem_Wait( &m_semWait ); }

    inline void SetError( gint32 iError )
    { m_iError = iError; }

    inline gint32 GetError() const
    { return m_iError; }

    // IAsyncTest
    virtual gint32 LongWaitCallback(
        IConfigDb* context, gint32 iRet,
        const std::string& i0r /*[ In ]*/ );
    
    virtual gint32 LongWaitNoParamCallback(
        IConfigDb* context, gint32 iRet );
};


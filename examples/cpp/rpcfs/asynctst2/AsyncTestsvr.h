// Generated by ridlc
// ridlc -s -O . ../../../asynctst.ridl 
// Your task is to implement the following classes
// to get your rpc server work
#pragma once
#include "asynctst.h"

#define Clsid_CAsyncTest_SvrBase    Clsid_Invalid

DECLARE_AGGREGATED_SERVER(
    CAsyncTest_SvrBase,
    CStatCounters_SvrBase,
    IIAsyncTest_SvrApi,
    CFastRpcServerBase );

class CAsyncTest_SvrImpl
    : public CAsyncTest_SvrBase
{
    public:
    typedef CAsyncTest_SvrBase super;
    CAsyncTest_SvrImpl( const IConfigDb* pCfg ) :
        super::virtbase( pCfg ), super( pCfg )
    { SetClassId( clsid(CAsyncTest_SvrImpl ) ); }

    gint32 OnPostStart(
        IEventSink* pCallback ) override
    {
        StartQpsTask();
        return super::OnPostStart( pCallback );
    }

    gint32 OnPreStop(
        IEventSink* pCallback ) override
    {
        StopQpsTask();
        return super::OnPreStop( pCallback );
    }

    //RPC Async Req Cancel Handler
    gint32 OnLongWaitCanceled(
        IConfigDb* pReqCtx_, gint32 iRet,
        const std::string& i0 ) override;

    gint32 LongWaitCb(
        IEventSink* pCallback,
        IConfigDb* pReqCtx_,
        const std::string& i0 );

    //RPC Async Req Handler
    gint32 LongWait(
        IConfigDb* pReqCtx_,
        const std::string& i0 /*[ In ]*/,
        std::string& i0r /*[ Out ]*/ ) override;
    //RPC Sync Req Handler
    gint32 LongWaitNoParam() override;
    
    gint32 LongWait2Cb(
        IConfigDb* pReqCtx,
        const std::string& i1 );

    // RPC Async Req Cancel Handler
    // Rewrite this method to release the resources
    gint32 OnLongWait2Canceled(
        IConfigDb* pReqCtx_, gint32 iRet,
        const std::string& i1 /*[ In ]*/ ) override
    {
        DebugPrintEx( logErr, iRet,
            "request 'LongWait2' is canceled." );
        return STATUS_SUCCESS;
    }
    //RPC Async Req Handler
    gint32 LongWait2(
        IConfigDb* pReqCtx_,
        const std::string& i1 /*[ In ]*/,
        std::string& i1r /*[ Out ]*/ ) override;
    gint32 CreateStmSkel(
        HANDLE, guint32, InterfPtr& ) override;
    
    gint32 OnPreStart(
        IEventSink* pCallback ) override;
};

class CAsyncTest_ChannelSvr
    : public CRpcStreamChannelSvr
{
    public:
    typedef CRpcStreamChannelSvr super;
    CAsyncTest_ChannelSvr(
        const IConfigDb* pCfg ) :
        super::virtbase( pCfg ), super( pCfg )
    { SetClassId( clsid(
        CAsyncTest_ChannelSvr ) ); }
};


// GENERATED BY RIDLC, MAKE SURE TO BACKUP BEFORE RUNNING RIDLC AGAIN
// Copyright (C) 2025  zhiming <woodhead99@gmail.com>
// This program can be distributed under the terms of the GNU GPLv3.
// ridlc -JO. -Lcn --odesc_url=https://example.com/rpcf ../../evtest.ridl 
const { CConfigDb2 } = require( '/usr/local/lib/rpcf/jslib/combase/configdb' );
const { messageType } = require( '/usr/local/lib/rpcf/jslib/dbusmsg/constants' );
const { randomInt, ERROR, Int32Value, USER_METHOD } = require( '/usr/local/lib/rpcf/jslib/combase/defines' );
const {EnumClsid, errno, EnumPropId, EnumCallFlags, EnumTypeId, EnumSeriProto} = require( '/usr/local/lib/rpcf/jslib/combase/enums' );
const {CSerialBase, Variant} = require( '/usr/local/lib/rpcf/jslib/combase/seribase' );
const {CInterfaceProxy} = require( '/usr/local/lib/rpcf/jslib/ipc/proxy' )
const {Buffer} = require( 'buffer' );
const { DBusIfName, DBusDestination2, DBusObjPath } = require( '/usr/local/lib/rpcf/jslib/rpc/dmsg' );
const { CEventTestclibase } = require ( './EventTestclibase' )
class CEventTest_CliImpl extends CEventTestclibase
{
    constructor( oIoMgr, strObjDescPath, strObjName, oParams )
    {
        super( oIoMgr, strObjDescPath, strObjName, oParams );
    }

    // The following are callbacks and event handlers
    // which need to be filled out by you
    
    // IEventTest::OnHelloWorld
    // event handler
    OnHelloWorld(
        strMsg // String
    )
    {
        // add code here
        this.DebugPrint( "Event from server '" + strMsg + "'")
    }
}

exports.CEventTest_CliImpl = CEventTest_CliImpl;
